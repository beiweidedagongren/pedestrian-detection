# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with P2-P6 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  s: [0.33, 0.50, 1024]
  m: [0.67, 0.75, 768]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.25, 512]

# YOLOv8.0 backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]]  # 1-P2/4
  - [-1, 3, C2f, [128, True]]  # 2
  - [-1, 1, Conv, [256, 3, 2]]  # 3-P3/8
  - [-1, 6, C2f, [256, True]]  # 4
  - [-1, 1, Conv, [512, 3, 2]]  # 5-P4/16
  - [-1, 6, C2f, [512, True]]  # 6
  - [-1, 1, Conv, [1024, 3, 2]]  # 7-P5/32
  - [-1, 3, C2f, [1024, True]]  # 8
  - [-1, 1, SPPF, [1024, 5]]  # 9

# YOLOv8.0 head
head:
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]  # 10: upsample from P5 to P4
  - [[-1, 6], 1, Concat, [1]]  # 11: concatenate with backbone P4 (layer 6)
  - [-1, 3, C2f, [512]]  # 12

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]  # 13: upsample from P4 to P3
  - [[-1, 4], 1, Concat, [1]]  # 14: concatenate with backbone P3 (layer 4)
  - [-1, 3, C2f, [256]]  # 15 (P3/8-small)

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]  # 16: upsample from P3 to P2
  - [[-1, 2], 1, Concat, [1]]  # 17: concatenate with backbone P2 (layer 2)
  - [-1, 3, C2f, [128]]  # 18 (P2/4-xsmall)

  - [-1, 1, Conv, [128, 3, 2]]  # 19: downsample from P2 to P3
  - [[-1, 15], 1, Concat, [1]]  # 20: concatenate with head P3 (layer 15)
  - [-1, 3, C2f, [128]]  # 21 (P3/8-small)

  - [-1, 1, Conv, [256, 3, 2]]  # 22: downsample from P3 to P4
  - [[-1, 12], 1, Concat, [1]]  # 23: concatenate with head P4 (layer 12)
  - [-1, 3, C2f, [256]]  # 24 (P4/16-medium)

  - [-1, 1, Conv, [512, 3, 2]]  # 25: downsample from P4 to P5
  - [[-1, 9], 1, Concat, [1]]  # 26: concatenate with backbone P5 (layer 9)
  - [-1, 3, C2f, [512]]  # 27 (P5/32-large)

  - [-1, 1, Conv, [512, 3, 2]]  # 28: downsample from P5 to P6
  - [-1, 3, C2f, [512]]  # 29 (P6/64-extra)

  - [[18, 21, 24, 27, 29], 1, Detect_FASFF, [nc]]  # 30: Detect(P2, P3, P4, P5, P6)
